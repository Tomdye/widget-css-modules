import { ComposeFactory } from 'dojo-compose/compose';
import { Widget, WidgetOptions, WidgetState, WidgetProperties } from './../../interfaces';
import { FormFieldMixin, FormFieldMixinState, FormFieldMixinOptions } from '../../mixins/createFormFieldMixin';
export interface TypedTargetEvent<T extends EventTarget> extends Event {
    target: T;
}
export declare type TextInputState = WidgetState & FormFieldMixinState<string>;
export declare type TextInputOptions = WidgetOptions<TextInputState, WidgetProperties> & FormFieldMixinOptions<string, TextInputState>;
export declare type TextInput = Widget<TextInputState, WidgetProperties> & FormFieldMixin<string, TextInputState>;
export interface TextInputFactory extends ComposeFactory<TextInput, TextInputOptions> {
}
declare const createTextInput: TextInputFactory;
export default createTextInput;
