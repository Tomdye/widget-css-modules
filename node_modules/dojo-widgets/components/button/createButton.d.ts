import { ComposeFactory } from 'dojo-compose/compose';
import { Widget, WidgetOptions, WidgetProperties, WidgetState } from './../../interfaces';
import { FormFieldMixin, FormFieldMixinState, FormFieldMixinOptions } from '../../mixins/createFormFieldMixin';
export interface ButtonState extends WidgetState, FormFieldMixinState<string> {
    label?: string;
}
export interface ButtonProperties extends WidgetProperties {
    label?: string;
}
export interface ButtonOptions extends WidgetOptions<ButtonState, ButtonProperties>, FormFieldMixinOptions<any, ButtonState> {
}
export declare type Button = Widget<ButtonState, ButtonProperties> & FormFieldMixin<string, ButtonState>;
export interface ButtonFactory extends ComposeFactory<Button, ButtonOptions> {
}
declare const createButton: ButtonFactory;
export default createButton;
