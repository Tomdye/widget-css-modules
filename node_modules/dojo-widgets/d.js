(function (dependencies, factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(dependencies, factory);
    }
})(["require", "exports", "dojo-core/lang", "maquette", "./FactoryRegistry"], function (require, exports) {
    "use strict";
    var lang_1 = require("dojo-core/lang");
    var maquette_1 = require("maquette");
    var FactoryRegistry_1 = require("./FactoryRegistry");
    exports.registry = new FactoryRegistry_1.default();
    function w(factory, options, children) {
        if (children === void 0) { children = []; }
        return {
            children: children,
            factory: factory,
            options: options
        };
    }
    exports.w = w;
    function v(tag, propertiesOrChildren, children) {
        if (propertiesOrChildren === void 0) { propertiesOrChildren = {}; }
        if (children === void 0) { children = []; }
        if (Array.isArray(propertiesOrChildren)) {
            children = propertiesOrChildren;
            propertiesOrChildren = {};
        }
        return {
            children: children,
            render: function (options) {
                if (options === void 0) { options = {}; }
                return maquette_1.h(tag, lang_1.assign(options, propertiesOrChildren), this.children);
            }
        };
    }
    exports.v = v;
});
//# sourceMappingURL=d.js.map