import { ComposeFactory } from 'dojo-compose/compose';
import { VNodeProperties } from 'dojo-interfaces/vdom';
import { DNode, HNode, WNode, Widget, WidgetOptions, WidgetState, WidgetProperties } from './interfaces';
import FactoryRegistry from './FactoryRegistry';
export declare const registry: FactoryRegistry;
export declare function w<P extends WidgetProperties, S extends WidgetState, W extends Widget<S, P>, O extends WidgetOptions<S, P>>(factory: ComposeFactory<W, O> | string, options: O): WNode;
export declare function w<P extends WidgetProperties, S extends WidgetState, W extends Widget<S, P>, O extends WidgetOptions<S, P>>(factory: ComposeFactory<W, O> | string, options: O, children?: DNode[]): WNode;
export declare function v(tag: string, properties: VNodeProperties, children?: DNode[]): HNode;
export declare function v(tag: string, children: DNode[]): HNode;
export declare function v(tag: string): HNode;
